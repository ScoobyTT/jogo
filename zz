// JOGO-ED1 - Uma Aventura com Árvores de Decisão
// Trabalho Final - Estrutura de Dados I - UNEB
// Desenvolvido por: Christian Amós e parceiro

#include <iostream>
#include <string>
using namespace std;

// =================== STRUCT DA ÁRVORE ===================
struct NoArvore {
    string historia;
    NoArvore* esquerda;
    NoArvore* direita;

    NoArvore(string texto) : historia(texto), esquerda(nullptr), direita(nullptr) {}
};

// =================== STRUCT DA LISTA DUPLAMENTE ENCADEADA ===================
struct Jogador {
    string nome;
    int vitorias;
    int derrotas;
    int total;
    Jogador* ant;
    Jogador* prox;
};

class ListaJogadores {
private:
    Jogador* inicio;

public:
    ListaJogadores() : inicio(nullptr) {}

    void inserir(string nome, int v, int d) {
        Jogador* novo = new Jogador{nome, v, d, v + d, nullptr, nullptr};
        if (!inicio) {
            inicio = novo;
        } else {
            Jogador* atual = inicio;
            Jogador* anterior = nullptr;
            while (atual && v < atual->vitorias) {
                anterior = atual;
                atual = atual->prox;
            }
            if (!anterior) {
                novo->prox = inicio;
                inicio->ant = novo;
                inicio = novo;
            } else {
                novo->prox = atual;
                novo->ant = anterior;
                anterior->prox = novo;
                if (atual) atual->ant = novo;
            }
        }
    }

    void mostrar() {
        Jogador* atual = inicio;
        while (atual) {
            cout << atual->nome << ": Jogos: " << atual->total
                 << ", Ganhou: " << atual->vitorias << ", Perdeu: " << atual->derrotas << endl;
            atual = atual->prox;
        }
    }
};

// =================== HISTÓRICO DO JOGO ===================
struct Historico {
    string historia;
    Historico* prox;
};

class ListaHistorico {
private:
    Historico* inicio;

public:
    ListaHistorico() : inicio(nullptr) {}

    void inserir(string texto) {
        Historico* novo = new Historico{texto, nullptr};
        if (!inicio) inicio = novo;
        else {
            Historico* atual = inicio;
            while (atual->prox) atual = atual->prox;
            atual->prox = novo;
        }
    }

    void mostrar() {
        Historico* atual = inicio;
        while (atual) {
            cout << atual->historia << endl;
            atual = atual->prox;
        }
    }
};

// =================== FUNÇÃO DE CRIAÇÃO DA ÁRVORE ===================
NoArvore* criarArvore() {
    NoArvore* raiz = new NoArvore("Você está numa Floresta, caminha para o Leste?");

    raiz->esquerda = new NoArvore("Segue uma voz misteriosa?");
    raiz->direita = new NoArvore("Encontra um rio, cruza o rio?");

    raiz->direita->esquerda = new NoArvore("Fim, não conseguiu atravessar o rio");
    raiz->direita->direita = new NoArvore("Encontra uma cabana, entra?");
    raiz->direita->direita->direita = new NoArvore("Fim, chegou à civilização");

    return raiz;
}

// =================== MENU PRINCIPAL ===================
void menuPrincipal() {
    cout << "===== JOGO-ED1: Uma Aventura com Árvores de Decisão =====" << endl;
    cout << "1. Conhecer a História do Jogo" << endl;
    cout << "2. Regras do Jogo" << endl;
    cout << "3. Jogar" << endl;
    cout << "4. Verificar o Score" << endl;
    cout << "5. Sair" << endl;
    cout << "Escolha uma opção: ";
}

void menuTecnico() {
    cout << "===== MENU INFORMAÇÕES TÉCNICAS =====" << endl;
    cout << "1. Mostrar histórico de movimentos" << endl;
    cout << "2. Voltar ao menu anterior" << endl;
    cout << "Escolha uma opção: ";
}

// =================== FUNÇÃO PRINCIPAL ===================
int main() {
    ListaJogadores score;
    int opcao;
    do {
        menuPrincipal();
        cin >> opcao;
        cin.ignore();

        if (opcao == 1) {
            cout << "\nVocê será o protagonista de uma história interativa, onde suas escolhas definem o caminho." << endl;
        } else if (opcao == 2) {
            cout << "\nUse 1 para responder 'Sim' e 2 para 'Não' nas perguntas.\nSeu objetivo é chegar ao final positivo da história." << endl;
        } else if (opcao == 3) {
            string nome;
            cout << "Digite seu nome: ";
            getline(cin, nome);

            NoArvore* raiz = criarArvore();
            NoArvore* atual = raiz;
            ListaHistorico hist;
            int ganhou = 0;

            while (atual->esquerda || atual->direita) {
                cout << atual->historia << endl;
                hist.inserir(atual->historia);
                cout << "1 - Sim\n2 - Não\nEscolha: ";
                int escolha;
                cin >> escolha;
                if (escolha == 1) atual = atual->esquerda;
                else if (escolha == 2) atual = atual->direita;
                else cout << "\nEscolha inválida.\n";
            }

            cout << atual->historia << endl;
            hist.inserir(atual->historia);
            if (atual->historia.find("chegou à civilização") != string::npos) ganhou = 1;

            score.inserir(nome, ganhou, 1 - ganhou);

            int sub;
            do {
                menuTecnico();
                cin >> sub;
                if (sub == 1) hist.mostrar();
            } while (sub != 2);

        } else if (opcao == 4) {
            score.mostrar();
        }

    } while (opcao != 5);

    cout << "Saindo do jogo. Obrigado por jogar!" << endl;
    return 0;
}
